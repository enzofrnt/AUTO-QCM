# Generated by Django 5.1.1 on 2024-10-03 09:46

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminCreationFlag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flag', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('color', models.CharField(default='#FFFFFF', help_text='Couleur hexadécimale (par exemple, #FF5733)', max_length=7)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('must_change_password', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='QCM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('date_modif', models.DateTimeField()),
                ('est_accessible', models.BooleanField(default=False)),
                ('nb_reponses', models.IntegerField(default=1)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'QCM',
                'verbose_name_plural': 'QCMs',
            },
        ),
        migrations.CreateModel(
            name='Plage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('debut', models.DateTimeField()),
                ('fin', models.DateTimeField()),
                ('groupe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plagesgroup', to='auth.group')),
                ('promo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plagespromo', to='auth.group')),
                ('qcm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plages', to='app.qcm')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('texte', models.CharField(max_length=255)),
                ('note', models.IntegerField(default=1)),
                ('melange_rep', models.BooleanField(default=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(blank=True, related_name='questions', to='app.tag')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
            },
        ),
        migrations.AddField(
            model_name='qcm',
            name='questions',
            field=models.ManyToManyField(blank=True, related_name='qcms', to='app.question'),
        ),
        migrations.CreateModel(
            name='Reponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texte', models.CharField(max_length=255)),
                ('is_correct', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reponses', to='app.question')),
            ],
            options={
                'verbose_name': 'Réponse',
                'verbose_name_plural': 'Réponses',
            },
        ),
        migrations.CreateModel(
            name='ReponseQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question', to='app.question')),
                ('reponse', models.ManyToManyField(related_name='reponses', to='app.reponse')),
                ('utilisateur', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='eleve', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Réponse Question',
                'verbose_name_plural': 'Réponses Questions',
                'unique_together': {('utilisateur', 'question', 'date')},
            },
        ),
        migrations.CreateModel(
            name='ReponseQCM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_debut', models.DateTimeField()),
                ('date_fin_reponse', models.DateTimeField(blank=True, null=True)),
                ('est_evalue', models.BooleanField(default=False)),
                ('qcm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reponses_qcm', to='app.qcm')),
                ('utilisateur', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='reponses_qcm', to=settings.AUTH_USER_MODEL)),
                ('reponses', models.ManyToManyField(to='app.reponsequestion')),
            ],
            options={
                'verbose_name': 'Réponse QCM',
                'verbose_name_plural': 'Réponses QCM',
                'unique_together': {('utilisateur', 'qcm', 'date_debut')},
            },
        ),
    ]
