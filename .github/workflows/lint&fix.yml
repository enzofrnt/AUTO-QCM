name: Pre-Commit Hook Check

on:
  pull_request:
  push:

jobs:
  pre-commit:
    runs-on: ubuntu-latest

    steps:
      # Étape 1: Checkout du code
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2: Setup Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Étape 3: Installer pre-commit
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit

      # Étape 4: Exécuter pre-commit en mode check
      - name: Run pre-commit hooks (check mode)
        run: |
          pre-commit run --all-files --show-diff-on-failure
        continue-on-error: true  # Permet de ne pas bloquer immédiatement la PR

      # Étape 5: Vérifier s'il y a eu des erreurs
      - name: Check for linting issues
        if: failure()  # Ne continue que si des erreurs sont détectées
        run: echo "Linting issues found!"

      # Étape 6: Créer une branche avec les corrections et pousser les changements
      - name: Apply linting fixes and create a new branch
        if: failure()  # Si des erreurs sont trouvées
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          pre-commit run --all-files  # Applique les correctifs
          git checkout -b lint-fixes-${{ github.run_id }}  # Crée une nouvelle branche unique basée sur l'ID du run
          git add .
          git commit -m "Apply linting fixes"
          git push origin lint-fixes-${{ github.run_id }}

      # Étape 7: Créer une nouvelle PR avec les corrections
      - name: Create pull request with fixes
        if: failure()  # Si des erreurs ont été corrigées
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: main
          title: "Fix linting issues"
          body: "This pull request fixes linting issues detected in the original PR."

      # Étape 8: Bloquer la PR d'origine avec un commentaire
      - name: Comment on original PR
        if: failure()  # Si des erreurs sont trouvées
        uses: actions/github-script@v6
        with:
          script: |
            github.issues.createComment({
              issue_number: ${{ github.event.pull_request.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "Linting issues were detected. A new PR with fixes has been created: [Fix linting issues](https://github.com/${{ github.repository }}/pulls?q=lint-fixes-${{ github.run_id }}). Please review and merge it before proceeding."
            })

      # Étape 9: Marquer la PR originale comme échouée
      - name: Fail the workflow if there are linting issues
        if: failure()  # Si des erreurs sont trouvées
        run: exit 1  # Force le workflow à échouer, bloquant ainsi la PR d'origine
