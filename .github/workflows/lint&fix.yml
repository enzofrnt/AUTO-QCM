name: pre-commit

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

permissions:
  contents: write
  pull-requests: write

jobs:
  pre-commit:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Récupère toutes les branches et l'historique

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install pre-commit
      run: |
        python -m pip install --upgrade pip
        pip install pre-commit

    - name: Run pre-commit hooks
      id: pre-commit
      run: |
        pre-commit run --all-files || EXIT_CODE=$?
        echo "Pre-commit exit code: $EXIT_CODE"
        echo "exit_code=$EXIT_CODE" >> $GITHUB_ENV

    # Créer une nouvelle branche et committer les changements
    - name: Commit changes if any
      if: ${{ env.exit_code == '1' }}
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        # Obtenir le nom de la branche de base
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          BASE_BRANCH="${{ github.event.pull_request.base.ref }}"
        else
          BASE_BRANCH="${{ github.ref_name }}"
        fi
        # Créer et basculer vers une nouvelle branche
        git checkout -b fix/pre-commit-fixes-${{ github.run_id }} $BASE_BRANCH
        # Commiter les changements
        git commit -am "pre-commit fixes"

    # Pousser la nouvelle branche vers le dépôt distant
    - name: Push changes
      if: ${{ env.exit_code == '1' }}
      run: |
        git push origin HEAD

    # Créer la PR si des changements ont été poussés
    - name: Create Pull Request if changes
      if: ${{ env.exit_code == '1' }}
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: pre-commit fixes
        branch: fix/pre-commit-fixes-${{ github.run_id }}
        title: "Fix pre-commit linting issues"
        body: "Automatic pre-commit fixes"
        labels: pre-commit, auto-fix
        base: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.ref || github.ref_name }}

    # Échouer le workflow sur les PR si des problèmes sont détectés
    - name: Fail if pre-commit issues found
      if: ${{ env.exit_code != '0' && github.event_name == 'pull_request' }}
      run: |
        echo "Pre-commit issues found. Please fix them."
        exit 1

    - name: Finish
      if: ${{ env.exit_code == '0' }}
      run: |
        echo "No pre-commit issues found."
