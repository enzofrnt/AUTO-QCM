name: pre-commit

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

permissions:
  contents: write
  pull-requests: write

jobs:
  pre-commit:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha || github.ref }}
        fetch-depth: 0

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install pre-commit
      run: |
        python -m pip install --upgrade pip
        pip install pre-commit

    - name: Run pre-commit hooks
      id: pre-commit
      run: |
        set +e
        OUTPUT=$(pre-commit run --all-files 2>&1)
        EXIT_CODE=$?
        echo "$OUTPUT"
        echo "Pre-commit exit code: $EXIT_CODE"
        echo "exit_code=$EXIT_CODE" >> $GITHUB_ENV
        echo "output<<EOF" >> $GITHUB_OUTPUT
        echo "$OUTPUT" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        set -e

    - name: Delete existing branches on origin
      if: ${{ env.exit_code == '1' || env.exit_code == '0' }}
      run: |
        git fetch origin fix/pre-commit-fixes-pr-${{ github.event.pull_request.number }} || true
        git fetch origin fix/pre-commit-fixes-${{ github.ref_name }} || true
        git branch -D fix/pre-commit-fixes-pr-${{ github.event.pull_request.number }} || true
        git branch -D fix/pre-commit-fixes-${{ github.ref_name }} || true
        git push origin --delete fix/pre-commit-fixes-pr-${{ github.event.pull_request.number }} || true
        git push origin --delete fix/pre-commit-fixes-${{ github.ref_name }} || true

    # Créer une Pull Request si des changements sont détectés sur une pull request existante
    - name: Create Pull Request if changes on pull request
      if: ${{ env.exit_code == '1' && github.event_name == 'pull_request' }}
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: pre-commit fixes
        branch: fix/pre-commit-fixes-pr-${{ github.event.pull_request.number }}
        title: "Fix linting issues in PR #${{ github.event.pull_request.number }}"
        body: |
          Lint fixes for PR #${{ github.event.pull_request.number }}

          <details>
          <summary>Cliquez pour voir les détails</summary>

          ```
          ${{ steps.pre-commit.outputs.output }}
          ```

          </details>

        labels: auto-fix-lint, bot
        base: ${{ github.event.pull_request.head.ref }}
        assignees: ${{ github.event.pull_request.user.login }}

    # Ajouter un commentaire à la pull request avec les problèmes de pre-commit
    - name: Comment on PR with pre-commit issues
      if: ${{ env.exit_code == '1' && github.event_name == 'pull_request' }}
      uses: peter-evans/create-or-update-comment@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        repository: ${{ github.repository }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          ⚠️ **Des problèmes ont été détectés par la CI :**

          <details>
          <summary>Cliquez pour voir les détails</summary>

          ```
          ${{ steps.pre-commit.outputs.output }}
          ```

          </details>

          Une Pull Request a été créée pour corriger ces problèmes.

    # Créer une Pull Request si des changements sont détectés sur un push
    - name: Create Pull Request if changes on push
      if: ${{ env.exit_code == '1' && github.event_name == 'push' }}
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: pre-commit fixes
        branch: fix/pre-commit-fixes-${{ github.ref_name }}
        title: "Fix pre-commit linting issues in ${github.ref_name}"
        body: "Automatic pre-commit fixes"
        labels: pre-commit, auto-fix
        base: ${{ github.ref_name }}

    # Échouer le workflow si des problèmes sont détectés
    - name: Fail if pre-commit issues found
      if: ${{ env.exit_code == '1' }}
      run: |
        echo "Des problèmes de lint ont été détectés. Veuillez les corriger."
        exit 1

    - name: Finish no issue
      if: ${{ env.exit_code == '0' }}
      run: |
        echo "Aucun problème détecté. Tout va bien."


    - name: Finish other issue
      if: ${{ env.exit_code != '0' && env.exit_code != '1' }}
      run: |
        echo "Un problème est survenu. Veuillez vérifier les logs."
        exit 1
